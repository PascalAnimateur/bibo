<?php

/**
 * Implements hook_ctools_plugin_api().
 */
function bibo_feeds_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "feeds" && $api == 'feeds_importer_default') {
    return array("version" => 1);
  }
}

/**
 * Implements of hook_feeds_plugins().
 */
function bibo_feeds_plugins() {
  $info = array();

  $info['FeedsBIBOProcessor'] = array(
    'name' => 'BIBO Processor',
    'description' => 'Create and update works from parsed content.',
    'handler' => array(
      'parent' => 'FeedsProcessor',
      'class' => 'FeedsBIBOProcessor',
      'file' => 'FeedsBIBOProcessor.inc',
      'path' => drupal_get_path('module', 'bibo_feeds'),
    ),
  );

  return $info;
}

/**
 * Implements hook_feeds_processor_targets().
 */
function bibo_feeds_processor_targets($entity_type, $bundle_name) {
  $targets = array();

  foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
    $info = field_info_field($name);

    // Publication status feeds target.
    if ($info['type'] == 'bibo_publication_status') {
      $targets[$name] = array(
        'name' => check_plain($instance['label']),
        'callback' => 'bibo_publication_status_feeds_set_target',
        'description' => t('The @label field of the entity.', array('@label' => $instance['label'])),
      );
    }

    // TODO: Contribution feeds target.
  }

  return $targets;
}

/**
 * Callback for mapping bibo_publication_status fields.
 */
function bibo_publication_status_feeds_set_target(FeedsSource $source, $entity, $target, array $values, array $mapping) {
  $language = $mapping['language'];
  $field_name = $mapping['target'];
  $field = isset($entity->$field_name) ? $entity->$field_name : array($language => array());

  // Iterate over all values.
  $delta = 0;
  foreach ($values as $value) {
    if (is_object($value) && $value instanceof FeedsElement) {
      $value = $value->getValue();
    }
    $field[$language][$delta]['bibo_publication_status'] = _bibo_publication_status_process_value($value);
    $delta++;
  }

  $entity->{$field_name} = $field;
}

/**
 * Helper function to process publication status value.
 */
function _bibo_publication_status_process_value($value) {
  $publication_status = array(
    'status' => 'unpublished',
    'year' => 0,
    'month' => 0,
    'day' => 0,
  );

  // Process statuses other than 'published'.
  $submitted = array('submitted', 'soumis');
  $accepted = array('accepted', 'acceptÃ©');
  $in_press = array('in press', 'sous presse');
  if (in_array(strtolower($value), $submitted)) {
    $publication_status['status'] = 'submitted';
  }
  else if (in_array(strtolower($value), $accepted)) {
    $publication_status['status'] = 'accepted';
  }
  else if (in_array(strtolower($value), $in_press)) {
    $publication_status['status'] = 'in_press';
  }
  else {
    // Process partial date formats Y[-m[-d]] and Y[/m[/d]].
    $parts = preg_split('/\/|-/', $value);
    if (!intval($parts[0]) || strlen($parts[0]) != 4)
      return $publication_status;
    $publication_status['status'] = 'published';
    $publication_status['year'] = isset($parts[0]) ? intval($parts[0]) : 0;
    $publication_status['month'] = isset($parts[1]) ? intval($parts[1]) : 0;
    $publication_status['day'] = isset($parts[2]) ? intval($parts[2]) : 0;
  }

  return $publication_status;
}
