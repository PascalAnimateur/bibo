<?php
/**
 * @file
 * BIBO installation, update and schema.
 */

/**
 * Implements hook_schema().
 */
function bibo_schema() {
  $schema = array();

  // Contributor database schema.
  $schema['bibo_contributor'] = array(
    'description' => 'The base table for contributor entities.',
    'fields' => array(
        'bibo_contributor_id' => array(
          'description' => 'Primary Key: Identifier for a contributor.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'type' => array(
          'description' => 'The type of this contributor.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'name' => array(
          'description' => 'The name of the contributor.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the contributor was created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'changed' => array(
          'description' => 'The Unix timestamp when the contributor was most recently saved.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ) + entity_exportable_schema_fields(),
    'primary key' => array('bibo_contributor_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  // Work database schema.
  $schema['bibo_work'] = array(
    'description' => 'The base table for work entities.',
    'fields' => array(
        'bibo_work_id' => array(
          'description' => 'Primary Key: Identifier for a work.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'type' => array(
          'description' => 'The type of this work.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'title' => array(
          'description' => 'The title of the work.',
          'type' => 'varchar',
          'length' => 1024,
          'not null' => TRUE,
          'default' => '',
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the work was created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'changed' => array(
          'description' => 'The Unix timestamp when the work was most recently saved.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ) + entity_exportable_schema_fields(),
    'primary key' => array('bibo_work_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  // Work type database schema.
  $schema['bibo_work_type'] = array(
    'description' => 'Stores information about defined work types.',
    'fields' => array(
        'bibo_work_type_id' => array(
          'type' => 'serial',
          'not null' => TRUE,
          'description' => 'Primary Key: Unique work type identifier.',
        ),
        'type' => array(
          'description' => 'The machine-readable name of this work type.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ),
        'label' => array(
          'description' => 'The human-readable name of this work type.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
          'translatable' => TRUE,
        ),
        'description' => array(
          'description' => 'A brief description of this work type.',
          'type' => 'text',
          'not null' => TRUE,
          'size' => 'medium',
          'translatable' => TRUE,
        ),
        'weight' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'size' => 'tiny',
          'description' => 'The weight of this work type in relation to others.',
        ),
      ) + entity_exportable_schema_fields(),
    'primary key' => array('bibo_work_type_id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function bibo_field_schema($field) {
  $schema = array();

  // Contribution field database schema.
  if ($field['type'] == 'bibo_contribution') {
    $schema = array(
      'columns' => array(
        'bibo_contributor_id' => array(
          'type' => 'int',
          'size' => 'normal',
          'not null' => TRUE,
          'description' => 'Contributor reference.',
        ),
        'bibo_contribution_role' => array(
          'type' => 'varchar',
          'length' => '32',
          'not null' => TRUE,
          'description' => 'Contributor role.',
        ),
      ),
      'foreign keys' => array(
        'bibo_contributor_id' => array(
          'table' => 'bibo_contributor',
          'columns' => array('bibo_contributor_id' => 'bibo_contributor_id'),
        ),
      ),
    );
  }

  // Publication status field database schema.
  if ($field['type'] == 'bibo_publication_status') {
    $schema = array(
      'columns' => array(
        'status' => array(
          'type' => 'varchar',
          'length' => '32',
          'not null' => TRUE,
          'description' => 'Publication status of a work.',
        ),
        'year' => array(
          'type' => 'varchar',
          'length' => '4',
          'not null' => FALSE,
          'description' => 'Year component of the publication date.',
        ),
        'month' => array(
          'type' => 'varchar',
          'length' => '2',
          'not null' => FALSE,
          'description' => 'Month component of the publication date.',
        ),
        'day' => array(
          'type' => 'varchar',
          'length' => '2',
          'not null' => FALSE,
          'description' => 'Day component of the publication date.',
        ),
      ),
    );
  }


  return $schema;
}

include_once 'bibo.field_base.inc';
include_once 'bibo.field_instance.inc';

/**
 * Implements hook_install().
 */
function bibo_install() {
  // Create work type bundles.
  foreach (bibo_default_work_type_bundles() as $bundle) {
    $bibo_work_type = entity_create('bibo_work_type', $bundle);
    $bibo_work_type->save();
  }

  // Create field bases.
  foreach (bibo_field_default_field_bases() as $field_base) {
    field_create_field($field_base);
  }

  // Create field instances.
  foreach (bibo_field_default_field_instances() as $field_instance) {
    field_create_instance($field_instance);
  }
}

/**
 * Implements hook_uninstall().
 */
function bibo_uninstall() {
  // Delete field instances.
  foreach (bibo_field_default_field_instances() as $field_instance) {
    field_delete_instance($field_instance, TRUE);
  }

  // Delete field bases.
  foreach (bibo_field_default_field_bases() as $field_name => $field_base) {
    field_delete_field($field_name);
  }
}

/**
 * Helper function that defines default work types.
 */
function bibo_default_work_type_bundles() {
  $bundles = array();

  $bundles['book'] = array(
    'type' => 'book',
    'label' => 'Book',
    'description' => 'A written or printed work usually on sheets of paper fastened or bound together within covers.',
    'is_new' => TRUE,
  );
  $bundles['book_section'] = array(
    'type' => 'book_section',
    'label' => 'Book section',
    'description' => 'A section of a book, like a chapter or preface.',
    'is_new' => TRUE,
  );
  $bundles['conference_paper'] = array(
    'type' => 'conference_paper',
    'label' => 'Conference paper',
    'description' => 'A paper published in conference proceedings.',
    'is_new' => TRUE,
  );
  $bundles['journal_article'] = array(
    'type' => 'journal_article',
    'label' => 'Journal article',
    'description' => 'A paper on a specific topic from an issue or part of an academic journal or periodical.',
    'is_new' => TRUE,
  );
  $bundles['magazine_article'] = array(
    'type' => 'magazine_article',
    'label' => 'Magazine article',
    'description' => 'A non-research article directed at a readership that extends beyond the traditional research community.',
    'is_new' => TRUE,
  );
  $bundles['newspaper_article'] = array(
    'type' => 'newspaper_article',
    'label' => 'Newspaper article',
    'description' => 'A written work published in a print or electronic newspaper.',
    'is_new' => TRUE,
  );
  $bundles['presentation'] = array(
    'type' => 'presentation',
    'label' => 'Presentation',
    'description' => 'A spoken or non-written work presented at a conference.',
    'is_new' => TRUE,
  );
  $bundles['report'] = array(
    'type' => 'report',
    'label' => 'Report',
    'description' => 'A document describing an account or statement describing in detail an event, situation, or the like, usually as the result of observation, inquiry, etc.',
    'is_new' => TRUE,
  );
  $bundles['thesis'] = array(
    'type' => 'thesis',
    'label' => 'Thesis',
    'description' => 'A document created to summarize research findings associated with the completion of an academic degree.',
    'is_new' => TRUE,
  );

  return $bundles;
}
